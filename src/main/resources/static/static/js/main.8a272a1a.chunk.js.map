{"version":3,"sources":["styled.js","index.js"],"names":["Container","styled","div","_templateObject","AccountBox","_templateObject2","AccountTitle","h4","_templateObject3","AccountAmount","_templateObject4","ButtonsWrapper","_templateObject5","Input","input","_templateObject6","Button","button","_templateObject7","Error","_templateObject8","TransactionsTitle","h2","_templateObject9","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","fetchData","fetch","method","then","response","json","data","amount","transactions","console","log","accountData","transactionsHistory","catch","rejected","handleDebit","body","JSON","stringify","state","debit","headers","Content-Type","status","errorCode","error","message","handleCredit","credit","undefined","_this2","_this$state","react_default","a","createElement","onClick","map","transaction","index","key","type","Component","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8a272a1a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display:flex;\n    flex-direction: column;\n    margin-left :35%;\n    padding: 10px;\n    width:20%\n    align-items:center;\n`\n\nexport const AccountBox = styled.div`\n    display:flex;\n    flex-direction: row;\n`\n\nexport const AccountTitle = styled.h4`\n    color: \"black\";\n`\n\nexport const AccountAmount = styled.h4`\n    color:red;\n`\n\nexport const ButtonsWrapper = styled.div`\n    display:flex;\n    flex-direction: row;\n`\n\nexport const Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: \"palevioletred\";\n  background: papayawhip;\n  border: none;\n  border-radius: 3px;\n`;\n\nexport const Button = styled.button`\n  background: \"white\";\n  color: \"palevioletred\";\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\nexport const Error = styled.div`\n    width:600px;\n    margin-top: 20px;\n    text-align:center\n    color:red\n`\n\nexport const TransactionsTitle = styled.h2`\n    color: \"black\";\n`","import React, {Component} from \"react\";\nimport {render} from \"react-dom\";\nimport {AccountAmount, AccountBox, AccountTitle, Button, ButtonsWrapper, Container, Error, Input, TransactionsTitle} from './styled'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountData: undefined,\n            transactionsHistory: [],\n            debit: '',\n            credit: '',\n            error: ''\n        };\n    }\n\n    componentWillMount() {\n        this.fetchData();\n    }\n\n    onChange = e =>\n        this.setState({[e.target.name]: e.target.value});\n\n    fetchData = () => {\n        fetch(\n            'http://localhost:8080/api/account',\n            {\n                method: 'GET'\n            }\n        )\n            .then(response => response.json())\n            .then(data => {\n                const {amount, transactions} = data;\n                console.log(transactions)\n                this.setState({\n                                  accountData: amount,\n                                  transactionsHistory: transactions\n                              })\n            })\n            .catch(rejected => {\n                console.log(rejected);\n            });\n    };\n\n    handleDebit = () => {\n        fetch(\n            'http://localhost:8080/api/account/transaction/debit',\n            {\n                method: 'POST',\n                body: JSON.stringify({amount: this.state.debit}),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n        )\n            .then(response => {\n                return response && response.status === 400 ? response.json() : response\n            })\n            .then(data => {\n                data.errorCode && data.errorCode === 400\n                && this.setState({error: data.message}, () => this.fetchData());\n                data.status && data.status === 200 && this.setState({error: ''}, () => this.fetchData());\n            })\n            .catch(rejected => {\n                console.log(rejected);\n            });\n    };\n\n    handleCredit = () => {\n        fetch(\n            'http://localhost:8080/api/account/transaction/credit',\n            {\n                method: 'POST',\n                body: JSON.stringify({amount: this.state.credit}),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n        )\n            .then(response => response)\n            .then(data => data.status === 200 && this.setState({error: ''}, () => this.fetchData()))\n            .catch(rejected => {\n                console.log(rejected);\n            });\n    };\n\n    render() {\n        const {accountData, debit, credit, error, transactionsHistory} = this.state;\n        console.log(\"render:\", transactionsHistory)\n        return (\n            <Container>\n                <AccountBox>\n                    <AccountTitle>Current Amount:</AccountTitle>\n                    <AccountAmount>{accountData}</AccountAmount>\n                </AccountBox>\n                <ButtonsWrapper>\n                    <Input\n                        name=\"debit\"\n                        value={debit}\n                        onChange={e => this.onChange(e)}\n                    />\n                    <Button onClick={this.handleDebit}>Debit</Button>\n                    <Input\n                        name=\"credit\"\n                        value={credit}\n                        onChange={e => this.onChange(e)}\n                    />\n                    <Button onClick={this.handleCredit}>Credit</Button>\n                </ButtonsWrapper>\n                {error && (<Error>{error}</Error>)}\n                <TransactionsTitle>Transactions history</TransactionsTitle>\n                {transactionsHistory && transactionsHistory.map((transaction, index) =>  {\n                    console.log(\"Transaction: \", transaction)\n                    return <div key={index}>\n                        <div>{transaction.amount}</div>\n                        <div>{transaction.type}</div>\n                    </div>\n                })}\n            </Container>\n        )\n    }\n}\n\nrender(<App/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}